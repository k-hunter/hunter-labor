From 68bd8433c7e11a8dbe100deefdfac69138ee7cd9 Mon Sep 17 00:00:00 2001
From: Christos Zoulas <christos@zoulas.com>
Date: Tue, 9 Dec 2014 02:46:38 +0000
Subject: [PATCH] Only trust sizes of regular files.

---
 src/readelf.c | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

Index: file-5.14/src/readelf.c
===================================================================
--- file-5.14.orig/src/readelf.c	2018-06-13 14:31:53.414828454 -0400
+++ file-5.14/src/readelf.c	2018-06-13 14:31:53.410828442 -0400
@@ -62,6 +62,7 @@ private uint64_t getu64(int, uint64_t);
 
 #define MAX_PHNUM	128
 #define	MAX_SHNUM	32768
+#define SIZE_UNKNOWN	((off_t)-1)
 
 private int
 toomany(struct magic_set *ms, const char *name, uint16_t num)
@@ -324,7 +325,7 @@ dophn_core(struct magic_set *ms, int cla
 		}
 		off += size;
 
-		if (xph_offset > fsize) {
+		if (fsize != SIZE_UNKNOWN && xph_offset > fsize) {
 			/* Perhaps warn here */
 			continue;
 		}
@@ -965,7 +966,7 @@ doshn(struct magic_set *ms, int clazz, i
 			stripped = 0;
 			break;
 		default:
-			if (xsh_offset > fsize) {
+			if (fsize != SIZE_UNKNOWN && xsh_offset > fsize) {
 				/* Perhaps warn here */
 				continue;
 			}
@@ -1161,7 +1162,7 @@ dophn_exec(struct magic_set *ms, int cla
 			shared_libraries = " (uses shared libs)";
 			break;
 		default:
-			if (xph_offset > fsize) {
+			if (fsize != SIZE_UNKNOWN && xph_offset > fsize) {
 				/* Maybe warn here? */
 				continue;
 			}
@@ -1254,7 +1255,10 @@ file_tryelf(struct magic_set *ms, int fd
   		file_badread(ms);
 		return -1;
 	}
-	fsize = st.st_size;
+	if (S_ISREG(st.st_mode))
+		fsize = st.st_size;
+	else
+		fsize = SIZE_UNKNOWN;
 
 	clazz = buf[EI_CLASS];
 
